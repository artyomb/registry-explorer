sass:
  li
    list-style: none
  ul
    list-style: none
link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.17.4/dist/css/uikit.min.css"
script src="https://cdn.jsdelivr.net/npm/uikit@3.17.4/dist/js/uikit.min.js"
script src="https://cdn.jsdelivr.net/npm/uikit@3.17.4/dist/js/uikit-icons.min.js"

ruby:
  require_relative '../utils/Node'
  structure = extract_tar_gz_structure(params[:sha256])

javascript:
  document.addEventListener("DOMContentLoaded", function() {
      const fileViewArea = document.getElementById("file-area");

      document.querySelectorAll(".file-element").forEach(function(fileElement) {
          fileElement.addEventListener("click", async function () {
              console.log("Clicked on file element with data-href:", fileElement.dataset.href);
              const url = eval(fileElement.dataset.href);
              try {
                  const response = await fetch(url);
                  const htmlContent = await response.text();
                  fileViewArea.innerHTML = htmlContent;
                  fileViewArea.style.textAlign = "left";
              } catch (error) {
                  console.error("Error loading file content:", error);
                  fileViewArea.innerHTML = "Error loading file content";
              }
          });
      });

      document.getElementById("directory-structure-container").querySelectorAll("li").forEach(function(directoryElement) {
          directoryElement.addEventListener("mouseover", function(event) {
              event.stopPropagation();
              if (!this.querySelector('ul[hidden="false"]')) {
                  this.style.backgroundColor = "#f0f0f0";
              }
          });

          directoryElement.addEventListener("mouseout", function(event) {
              event.stopPropagation();
              this.style.backgroundColor = "";
          });
      });

  });
sass:
  .split-container
    height: 82vh
    display: flex
    flex-direction: row
    column-gap: 1rem
    padding: 2rem
    border: 0.1rem solid #ccc
    border-radius: 0.5rem

    .hdr-container
      padding: 1rem 0rem
    #directory-structure-container
      flex: 1
      flex-basis: 50%
      overflow-y: auto
      overflow-x: auto
      padding: 1rem

    #file-area
      flex: 1
      flex-basis: 50%
      overflow-y: auto
      overflow-x: auto
    .size
      float: right

p= "Archive blob #{params[:sha256]} content."
p= "Total size: #{structure[:size]}"
.split-container
  #directory-structure-container
    .hdr-container
      span= "Files"
      span.size= "Size"
    .file-structure
      - render_structure = ->(structure, parent_path = '', parent_id = 'root', counter = 0) do
        - structure.each do |name, content|
          li
            - current_path = "#{parent_path}/#{name}"
            - current_id = "node_#{parent_id}_#{counter}"
            - if content.is_a?(Hash) && content[:is_dir]
              a.uk-toggle href="#" uk-toggle="target: ##{current_id}"
                span uk-icon="icon: folder"
                = " #{name}"
              span.size #{content[:size]}
              ul.uk-list.uk-margin-left id=current_id hidden=true
                - render_structure.call(content, current_path, current_id, 0)
            - elsif name != :size && content.is_a?(Hash)
              / a href="/file-in-archive/#{params[:sha256]}/$path/#{parent_path}/#{name}"
              .file-element data-href="'/file-in-archive/#{params[:sha256]}/$path/#{parent_path}/#{name}'"
                span uk-icon="icon: file-text"
                = " #{name}"
                span.size #{content[:size]}
          - counter += 1
      - render_structure.call(structure)
  #file-area Choose some file to view it's content

//javascript:
//  document.addEventListener('DOMContentLoaded', function() {
//    document.querySelectorAll('.uk-toggle').forEach(toggle => {
//      toggle.addEventListener('click', function() {
//        let icon = this.querySelector('[uk-icon]');
//        icon.setAttribute('uk-icon',
//          icon.getAttribute('uk-icon').includes('right') ?
//          'icon: triangle-down' :
//          'icon: triangle-right'
//        );
//      });
//    });
//  });
