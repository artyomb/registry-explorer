ruby:
  require_relative '../utils/Node'
  require_relative '../utils/file_utils'
  structure = extract_tar_gz_structure(params[:sha256])

javascript:
  document.addEventListener("DOMContentLoaded", function() {
      const fileViewArea = document.getElementById("file-area");

      document.querySelectorAll(".file-element").forEach(function(fileElement) {
          fileElement.addEventListener("click", async function () {
              console.log("Clicked on file element with data-href:", fileElement.dataset.href);
              const url = eval(fileElement.dataset.href);
              try {
                  const response = await fetch(url);
                  const htmlContent = await response.text();
                  fileViewArea.style.opacity = 1;
                  fileViewArea.innerHTML = htmlContent;
                  fileViewArea.style.textAlign = "left";
                  document.querySelector(".chosen")?.classList.toggle("chosen");
                  fileElement.classList.toggle("chosen");

              } catch (error) {
                  console.error("Error loading file content:", error);
                  fileViewArea.innerHTML = "Error loading file content";
              }
          });
      });
  });
sass:
  .file-element:hover
    background: #f0f0f0
    cursor: pointer
  .chosen
    background: #0070f3
    color: white

p.uk-text-lead= "Archive blob #{params[:sha256]} content."
p.uk-text-meta= "Total size: #{structure[:size].nil? ? 'Size unknown' : represent_size(structure[:size])}"

.uk-grid-divider.uk-grid-collapse.uk-child-width-expand@s .uk-grid-match uk-grid
  .uk-width-1-3.uk-padding-small.uk-background-muted.uk-height-viewport
    h4.uk-heading-divider.uk-text-center Files
    #directory-structure-container.uk-padding-small
      - render_structure = ->(structure, parent_path = '', parent_id = 'root', counter = 0) do
        - structure.each do |name, content|
          li.uk-list.uk-list-divider
          - current_path = "#{parent_path}/#{name}"
          - current_id = "node_#{parent_id}_#{counter}"
          - if content.is_a?(Hash) && content[:is_dir]
            a.uk-flex.uk-flex-between.uk-toggle href="#" uk-toggle="target: ##{current_id}"
              span.uk-flex.uk-flex-middle
                span.uk-icon="icon: folder; ratio: 1.2"
                span.uk-margin-small-left= name
              span.uk-text-meta #{represent_size(content[:size])}
            ul.uk-margin-left.uk-list.uk-list-collapse id=current_id.hidden=true
              - render_structure.call(content, current_path, current_id, 0)
          - elsif name != :size && content.is_a?(Hash)
            a.file-element.uk-flex.uk-flex-between.uk-list-item data-href="'/file-in-archive/#{params[:sha256]}/$path/#{parent_path}/#{name}'"
              span.uk-flex.uk-flex-middle
                span.uk-icon="icon: file-text; ratio: 1.2"
                span.uk-margin-small-left= name
              span.uk-text-meta #{represent_size(content[:size])}
          - counter += 1
      - render_structure.call(structure, ')

  .uk-width-2-3.uk-padding.uk-background-default.uk-height-viewport
    #file-area.uk-card.uk-card-default.uk-card-body.uk-text-center.uk-flex.uk-flex-middle.uk-flex-center
      span.uk-text-muted Choose a file to view its content.


/ a href="/file-in-archive/#{params[:sha256]}/$path/#{parent_path}/#{name}"
