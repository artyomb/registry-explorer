ruby:
  require 'benchmark'
  require_relative '../utils/Node'
  require_relative '../utils/file_utils'
  require_relative '../utils/time_measurer'
  require_relative '../utils/index_page_help_utils'

  margin_coef=1.5
  repo_path = $base_path + "/repositories"
  current_tag_image_path = repo_path + "/#{tag_image_path}"
  flattened, images, problem_blobs, required_for_image_blobs = load_image_tree(current_tag_image_path)

javascript:
    function updateRowStripes() {
        const visibleRows = [...document.querySelectorAll('tbody tr.tree-node:not(.hidden)')];

        visibleRows.forEach((row, index) => {
            if (index % 2 === 0) {
                row.classList.add('striped-even');
                row.classList.remove('striped-odd');
            } else {
                row.classList.add('striped-odd');
                row.classList.remove('striped-even');
            }
        });
    }

    document.addEventListener("DOMContentLoaded", function() {
        document.querySelector('body').addEventListener('click', function (event) {
            const row = event.target.closest('tr[data-href]');
            if (row) window.location.href = row.dataset.href;
        });
        updateRowStripes();
    });

/ h1.uk-h1= "Docker registry content (#{images.map{|img| img[:tags].map{ |tag| tag[:index_Nodes].size }.sum}.sum} images in #{images.map{|img| img[:tags].size}.sum} tags, total size = #{represent_size(CachesManager.get_repo_size("REPOSITORY", required_for_image_blobs))})"
.uk-flex.uk-padding.uk-padding-remove-horizontal.uk-width-expand.uk-flex-between.align-items-center.uk-padding-remove-bottom
  .uk-flex
    a.uk-link-text.border-around.hover-darker.padding-xsmall.uk-width-fit-content.uk-margin-right.align-content-center.uk-text-center onclick="goBack('/index')"
      span.icon-padding-right.icon-padding-left.uk-text-primary uk-icon="icon: chevron-left"
    h1.uk-h1.uk-margin-remove= "Image #{tag_image_path}"
  .uk-flex.uk-flex-middle.uk-flex-between.small-column-gap.uk-overflow-auto
    .uk-label.label-paddings.unset-text-transform.align-content-center.custom-label-background
      span.icon-padding-right uk-icon="icon: tag"
      span.uk-text-bold Tags:
      span= " #{images.map{|img| img[:tags].size}.sum}"
    .uk-label.label-paddings.unset-text-transform.align-content-center.custom-label-background
      / span uk-icon="icon: hashtag"
      span.icon-padding-right uk-icon="icon: album"
      span.uk-text-bold Images :
      span= " #{images.map{|img| img[:tags].map{ |tag| tag[:index_Nodes].size }.sum}.sum}"
    a.link-tag.uk-label.label-paddings.unset-text-transform.align-content-center.border-around href="/registry-healthcheck"
      span.icon-padding-right uk-icon="icon: ban"
      span.uk-text-bold Problem blobs:
      span.icon-padding-right= " #{problem_blobs.size}"
    a.link-tag.uk-label.label-paddings.unset-text-transform.align-content-center.border-around href="/blobs-exploring"
      span.icon-padding-right uk-icon="icon: database"
      span.uk-text-bold Disk usage:
      span.icon-padding-right= " #{represent_size(CachesManager.get_repo_size(current_tag_image_path, required_for_image_blobs))}"
hr
table.uk-table.uk-table-hover.uk-table-divider.uk-table-striped
  thead
    tr
      th Tag name
      th.uk-text-right style="width: 10%" Latest version
      th.uk-text-right style="width: 10%" Latest Git Pipeline
      th.uk-text-right style="width: 20%" Latest Git Commit
      th style="width: 25%" Latest Commit Message
      th.uk-text-right style="width: 10%" Images amount
      th.uk-text-right style="width: 10%" Image size
      th.uk-text-right style="width: 10%" Disk usage
      th style="width: 10%" Created at
  tbody
    - flattened.each do |node|
      - warn_node_condition = node[:problem_blobs].size > 0 || (!node[:image].nil? && node[:image].size > 0 && node[:image][:problem_blobs].size > 0)
      - node[:image][:tags]&.each do |tag|
        tr.tree-node class="#{tag[:problem_blobs].size > 0 ? 'warning-background' : ''}" data-href="/tag-exploring#{node[:image][:name]}/#{tag[:name]}" data-level="#{node[:level]+1}" data-image-name="#{node[:image][:name]}" data-tag-name="#{tag[:name]}"
          td
            - if tag[:problem_blobs].size != 0
              span.warning-icon uk-tooltip="title: #{(tag[:problem_blobs].size == 0) ? 'Full size of tag' : "Some layers of tag not found:<br>" + tag[:problem_blobs].map{|s| s[0..25] + '...' }.join('<br>')}; delay: 500;"  uk-icon="icon: warning"
            span uk-icon="icon: tag" style="padding: 0.5rem"
            span #{tag[:name]}
          - latest_index_build_info = tag[:index_Nodes]&.select{ |nd| tag[:current_index_sha256] == nd[:node].sha256 }.first[:build_info]
          - if latest_index_build_info != nil
            td.uk-text-right.cursor-pointer.uk-overflow-auto
              - service_version ||= latest_index_build_info.dig(:labels, "org.opencontainers.image.version".to_sym)
              - service_version ||= latest_index_build_info.dig(:labels, "org.label-schema.version".to_sym)
              - if !service_version.nil?
                .inline-container
                  span.uk-padding-small.uk-padding-remove-vertical.uk-padding-remove-right.uk-padding-remove-left= service_version
              - else
                .inline-container
                  span.uk-text-secondary= "-"
            td.uk-text-right.uk-text-primary.cursor-pointer
              - git_pipeline_url ||= latest_index_build_info.dig(:gitlab_ci_cd_env, :COM_GITLAB_CI_PIPELINEURL)
              - git_pipeline_url ||= latest_index_build_info.dig(:github_ci_cd_env, :COM_GITHUB_CI_ACTIONURL)
              - git_pipeline_iid ||= latest_index_build_info.dig(:gitlab_ci_cd_env, :COM_GITLAB_CI_PIPELINE_IID)
              - git_pipeline_iid ||= git_pipeline_url.nil? ? nil : git_pipeline_url.split('/').last
              - if !git_pipeline_url.nil?
                a href="#{git_pipeline_url}"
                  .inline-container
                    span.uk-padding-small.uk-padding-remove-vertical.uk-padding-remove-right.uk-padding-remove-left= git_pipeline_iid
              - else
                .inline-container
                  span.uk-text-secondary= "-"
            td.uk-text-right.uk-text-primary.cursor-pointer
              - git_commit_url ||= latest_index_build_info.dig(:gitlab_ci_cd_env, :COM_GITLAB_CI_COMMITURL)
              - git_commit_url ||= latest_index_build_info.dig(:github_ci_cd_env, :COM_GITHUB_CI_COMMITURL)
              - git_commit_short_sha ||= latest_index_build_info.dig(:gitlab_ci_cd_env, :COM_GITLAB_CI_COMMIT_SHORT_SHA)
              - git_commit_short_sha ||= latest_index_build_info.dig(:github_ci_cd_env, :COM_GITHUB_CI_COMMIT_SHORT_SHA)
              - if !git_commit_url.nil?
                a.uk-flex.uk-flex-right href="#{git_commit_url}"
                  span uk-icon="icon: git-branch"
                  .inline-container.uk-text-right
                    span.uk-padding-small.uk-padding-remove-vertical.uk-padding-remove-right.uk-padding-remove-left= git_commit_short_sha
              - else
                .inline-container
                  span.uk-text-secondary= "-"
            td.uk-overflow-auto
              - commit_message ||= latest_index_build_info.dig(:gitlab_ci_cd_env, :COM_GITLAB_CI_COMMIT_MESSAGE)
              - commit_message ||= latest_index_build_info.dig(:github_ci_cd_env, :COM_GITHUB_CI_COMMIT_MESSAGE)
              - if !commit_message.nil?
                .inline-container
                  span.uk-padding-small.uk-padding-remove-vertical.uk-padding-remove-right.uk-padding-remove-left.white-space-pre= commit_message.gsub('\n', "\n")
          - else
            td.uk-text-right.uk-text-secondary= "-"
            td.uk-text-right.uk-text-secondary= "-"
            td.uk-text-right.uk-text-secondary= "-"
          td.align-text-right #{tag[:index_Nodes].size}
          / Adjust disk usage
          td.align-text-right #{represent_size(tag[:index_Nodes].first[:node].get_effective_size).to_s + (tag[:problem_blobs].size > 0 ? ' (some blobs not found)' : '')}
          td.align-text-right #{represent_size(tag[:size]).to_s + (tag[:problem_blobs].size > 0 ? ' (some blobs not found)' : '')}
          - node_date_time = tag[:index_Nodes]&.select{ |nd| tag[:current_index_sha256] == nd[:node].sha256 }.first[:node].created_at
          td #{node_date_time.nil? ? 'Unknown' : represent_datetime(node_date_time)}
